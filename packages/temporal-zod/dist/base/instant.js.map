{"version":3,"file":"instant.js","sourceRoot":"","sources":["../../src/base/instant.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC7C,OAAO,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AAExB,OAAO,EAAE,kBAAkB,EAAE,MAAM,wBAAwB,CAAC;AAE5D,MAAM,CAAC,MAAM,OAAO,GAA4B,QAAQ,CAAC,OAAO,CAAC;AAEjE,MAAM,UAAU,GAAG,kBAAkB,CAAC,OAAO,CAAC,CAAC;AAE/C;;GAEG;AACH,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC;IAC9B,UAAU,CAAC,MAAM;IACjB,CAAC;SACE,IAAI,EAAE;SACN,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE,CACnB,QAAQ,CAAC,OAAO,CAAC,qBAAqB,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CACxD;CACJ,CAAC,CAAC;AAEH;;GAEG;AACH,MAAM,CAAC,MAAM,gBAAgB,GAC3B,UAAU,CAAC,QAAQ,CAAC","sourcesContent":["import { Temporal } from \"temporal-polyfill\";\nimport { z } from \"zod\";\n\nimport { temporalValidators } from \"./temporalValidator.js\";\n\nexport const Instant: typeof Temporal.Instant = Temporal.Instant;\n\nconst validators = temporalValidators(Instant);\n\n/**\n * Validates or coerces a string or Date to a {@link Temporal.Instant}.\n */\nexport const zInstant = z.union([\n  validators.coerce,\n  z\n    .date()\n    .transform((value) =>\n      Temporal.Instant.fromEpochMilliseconds(value.getTime()),\n    ),\n]);\n\n/**\n * Validates that the value is an instance of {@link Temporal.Instant}.\n */\nexport const zInstantInstance: z.ZodType<Temporal.Instant> =\n  validators.instance;\n"]}